<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.beans.ko</groupId>
  <artifactId>java-training</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
  	<dependency>
	    <groupId>commons-lang</groupId>
	    <artifactId>commons-lang</artifactId>
	    <version>2.6</version>
	</dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    	<groupId>dom4j</groupId>
    	<artifactId>dom4j</artifactId>
    	<version>1.6.1</version>
	</dependency>
	<dependency>
	    <groupId>com.alibaba</groupId>
	    <artifactId>fastjson</artifactId>
	    <version>1.2.47</version>
	</dependency>
	<dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.17</version>
	</dependency>
	<dependency>
		<groupId>org.apache.kafka</groupId>
		<artifactId>kafka_2.10</artifactId>
		<version>0.10.2.0</version>
	</dependency>
	<dependency>
		<groupId>org.apache.avro</groupId>
		<artifactId>avro</artifactId>
		<version>1.8.2</version>
		</dependency>	
  </dependencies>
  <build>
  	<defaultGoal>package</defaultGoal>
  	<finalName>${artifactId}-${version}</finalName>
  	<directory>${basedir}/target</directory>
  	<resources></resources>
  	<plugins>
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
  			<!-- 这种方式不会把依赖包打进去 -->
  			<artifactId>maven-jar-plugin</artifactId>
  			<configuration>
  				<archive>
  					<addMavenDescriptor>false</addMavenDescriptor>
  					<manifest>
  					  	<!-- 是否要把第三方jar放到manifest的classpath中 -->  
  						<addClasspath>true</addClasspath>
  						<!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/ --> 
  						<classpathPrefix>lib/</classpathPrefix>
  						<mainClass>com.beans.ko.java.training.App</mainClass>
  					</manifest>
  				</archive>
  				<excludes>
  					<exclude>bin/</exclude>
  					<exclude>log4j.properties</exclude>
  					<exclude>application.properties</exclude>
  				</excludes>
  			</configuration>
  		</plugin>
  		<!-- 拷贝依赖的jar包到lib目录 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<executions>
				<execution>
					<id>copy</id>
					<phase>package</phase>
					<goals>
						<goal>copy-dependencies</goal>
					</goals>
					<configuration>
						<includeScope>runtime</includeScope>
						<outputDirectory>${project.build.directory}/lib</outputDirectory>
					</configuration>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-assembly-plugin</artifactId>
			<configuration>
				<descriptors>
					<descriptor>package.xml</descriptor>
				</descriptors>
			</configuration>
			<executions>
			<execution>
					<id>make-assembly</id>
					<phase>package</phase>
					<goals>
						<goal>single</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
  	</plugins>
  </build>
</project>
